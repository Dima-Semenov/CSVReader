{"version":3,"sources":["Components/CurrentUser/CurrentUser.jsx","Components/UserList/UserList.jsx","App.js","index.js"],"names":["CurrentUser","id","full_name","phone","email","age","experience","yearly_income","has_children","license_states","expiration_date","license_number","dublicate","useState","isAgeError","setIsAgeError","isExperienceError","setIsExperienceError","isIncomeError","setIsIncomeError","isChildrenError","setIsChildrenError","correctChildren","setCorrectChildren","isPhoneError","setIsPhoneError","isLicenseError","setIsLicenseError","isDateError","setIsDateError","isStatesError","setIsStatesError","isEmailError","setIsEmailError","useEffect","date","Date","String","includes","split","length","trim","parse","className","defaultProps","UserList","users","map","user","App","listOfUsers","setUsers","isCorrectData","setIsCorrectData","index","find","item","inx","toLowerCase","label","onFileLoaded","data","fileinfo","name","parserOptions","header","dynamicTyping","skipEmptyLines","transformHeader","replace","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b9342ad3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../CurrentUser/currentUser.scss';\nimport PropTypes from 'prop-types';\n\nexport const CurrentUser = ({\n  id,\n  full_name,\n  phone,\n  email,\n  age,\n  experience,\n  yearly_income,\n  has_children,\n  license_states,\n  expiration_date,\n  license_number,\n  dublicate,\n}) => {\n  const million = 1000000;\n  const [ isAgeError, setIsAgeError] = useState(true);\n  const [ isExperienceError, setIsExperienceError] = useState(true);\n  const [ isIncomeError, setIsIncomeError ] = useState(true);\n  const [ isChildrenError, setIsChildrenError ] = useState(true);\n  const [ correctChildren, setCorrectChildren ] = useState(null);\n  const [ isPhoneError, setIsPhoneError ] = useState(true);\n  const [ isLicenseError, setIsLicenseError ] = useState(true);\n  const [ isDateError, setIsDateError ] = useState(true);\n  const [ isStatesError, setIsStatesError ] = useState(true);\n  const [ isEmailError, setIsEmailError ] = useState(true);\n\n  useEffect(() => {\n    const date = new Date();\n\n    if (typeof(age) === \"number\" && age >= 21 && age !== 0) {\n      setIsAgeError(false);\n    }\n\n    if (\n        experience >= 0 &&\n        experience <= age &&\n        typeof(experience) === \"number\"\n       ) {\n      setIsExperienceError(false);\n    }\n\n    if (typeof(yearly_income) === \"number\" && yearly_income <= million ) {\n      if (String(yearly_income).includes(\".\")) {\n        if(String(yearly_income).split('.')[1].length === 2)\n        setIsIncomeError(false);\n      }\n    }\n\n    if ( typeof(has_children) === \"boolean\" ) {\n      if ( has_children ) {\n        setCorrectChildren(\"True\");\n      } else {\n        setCorrectChildren(\"False\");\n      }\n\n      setIsChildrenError(false);\n    } else {\n      setCorrectChildren(has_children);\n    }\n\n    if (String(license_number).trim().length === 6) {\n      setIsLicenseError(false);\n    }\n\n    if (phone[0] === '+' && phone[1] === '1' && phone.length === 12) {\n      setIsPhoneError(false);\n    }\n\n    if (Date.parse(date)/1000 > Date.parse(expiration_date)/1000) {\n      setIsDateError(false);\n    }\n\n    if (typeof(license_states) === 'string' ) {\n      if (license_states.trim().length !== 0) {\n        setIsStatesError(false);\n      }\n    }\n\n    if (email.includes(\"@\")) {\n      setIsEmailError(false);\n    }\n\n  },\n  [\n    age,\n    experience,\n    yearly_income,\n    has_children,\n    license_number,\n    phone,expiration_date,\n    license_states,\n    email\n  ])\n\n  return (\n    <tr>\n      <td>{id}</td>\n      <td>{full_name}</td>\n      <td className={isPhoneError ? \"mistake\" : ''}>\n        {phone}\n      </td>\n      <td className={isEmailError ? \"mistake\" : ''}>\n        {email}\n      </td>\n      <td className={isAgeError ? \"mistake\" : ''}>\n        {age}\n      </td>\n      <td className={isExperienceError ? \"mistake\" : ''}>\n        {experience}\n      </td>\n      <td className={isIncomeError ? \"mistake\" : ''}>\n        {yearly_income}\n      </td>\n      <td className={isChildrenError ? \"mistake\" : ''}>\n        {correctChildren}\n      </td>\n      <td className={isStatesError ? \"mistake\" : ''}>\n        {license_states}\n      </td>\n      <td className={isDateError ? \"mistake\" : ''}>\n        {expiration_date}\n      </td>\n      <td className={isLicenseError ? \"mistake\" : ''}>\n        {license_number}\n      </td>\n      <td>\n        {dublicate}\n      </td>\n    </tr>\n  );\n};\n\nCurrentUser.propTypes = {\n  id: PropTypes.number.isRequired,\n  full_name: PropTypes.string.isRequired,\n  phone: PropTypes.number.isRequired,\n  email: PropTypes.string.isRequired,\n};\n\nCurrentUser.defaultProps = {\n  age: null,\n  experience: '',\n  yearly_income: '',\n  has_children: false,\n  license_states: '',\n  expiration_date: null,\n  license_number: '',\n  dublicate: null,\n}","import React from 'react';\nimport { CurrentUser } from '../CurrentUser/CurrentUser';\nimport '../UserList/userList.scss';\nimport PropTypes from 'prop-types';\n\nexport const UserList = ({ users }) => {\n  return (\n    <>\n      <table>\n        <thead>\n          <tr>\n            <td>\n              <strong>ID</strong>\n            </td>\n            <td>Full Name</td>\n            <td>Phone</td>\n            <td>Email</td>\n            <td>Age</td>\n            <td>Experience</td>\n            <td>Yearly Income</td>\n            <td>Has children</td>\n            <td>License states</td>\n            <td>Expiration date</td>\n            <td>License</td>\n            <td>Duplicate with</td>\n          </tr>\n        </thead>\n        <tbody>\n          {users.map(user => (\n            <CurrentUser key={user.id} {...user} />\n          ))}\n        </tbody>\n      </table>\n    </>\n  );\n};\n\nUserList.propTypes = {\n  users: PropTypes.array.isRequired,\n};\n","import './App.scss';\nimport React, { useState } from 'react';\nimport CSVReader from 'react-csv-reader'\nimport { UserList } from './Components/UserList/UserList';\n\nfunction App() {\n  const [ users, setUsers ] = useState([]);\n  const [ isCorrectData, setIsCorrectData ] = useState(true);\n\n  const fileAdd = (data, fileinfo) => {\n    if (!fileinfo.name.includes('.csv')) {\n      setIsCorrectData(false);\n      return;\n    }\n\n    setUsers(data.map((user, index) => {\n      if (user.full_name === null || user.phone === null || user.email === null) {\n        setIsCorrectData(false);\n      }\n\n      return {\n        ...user,\n        id: index + 1,\n      }\n    }));\n  };\n\n  const papaparseOptions = {\n    header: true,\n    dynamicTyping: true,\n    skipEmptyLines: true,\n    transformHeader: header => header.toLowerCase().replace(/\\W/g, \"_\"),\n  };\n\n  let listOfUsers;\n  if ( isCorrectData ) {\n    listOfUsers = users.map((user, index) => {\n      const dublicate = users.find((item, inx) => (\n        (item.email.trim().toLowerCase() === user.email.trim().toLowerCase() && index !== inx)\n        || (String(user.phone).includes(item.phone) && index !== inx)\n      ));\n\n      return {\n        ...user,\n        dublicate: dublicate ? dublicate.id : \"nope\",\n      }\n    });\n  }\n\n  return (\n    <div className=\"app\">\n      <CSVReader\n        className=\"csv-reader-input\"\n        label=\"Import users\"\n        onFileLoaded={fileAdd}\n        parserOptions={papaparseOptions}\n      >\n      </CSVReader>\n\n      {isCorrectData ? (\n          <UserList users={listOfUsers} />\n        ) : (\n          <div className=\"app__error\">\n            <p>File format is not correct</p>\n          </div>\n        )\n      }\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}